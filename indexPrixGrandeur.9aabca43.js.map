{"version":3,"sources":["scripts/explCoutArea/helper.js","scripts/explCoutArea/preprocess.js","scripts/explCoutArea/viz.js","scripts/explCoutArea/legend.js","indexPrixGrandeur.js"],"names":["generateG","margin","d3","select","append","attr","left","top","appendAxes","g","appendGraphLabels","text","defineColorScale","colors","players","scaleOrdinal","range","domain","setCanvasSize","width","height","positionLabels","drawXAxis","xScale","call","axisBottom","drawYAxis","yScale","axisLeft","ticks","extractPriceArea","data","map","elem","cleanData","filter","endResult","updateXScale","scale","temp","Math","min","max","updateYScale","drawCircles","y","x","selectAll","remove","enter","color","type","drawLegend","toString","svgSize","graphSize","bounds","right","bottom","scaleLinear","helper","csv","autoType","then","extracted_data","preproc","setSizing","node","getBoundingClientRect","build","viz","legend","window","addEventListener"],"mappings":";AAmHA,aA5GQ,SAASA,EAAWC,GAC1B,OAAOC,GAAGC,OAAO,oBACdA,OAAO,OACPC,OAAO,KACPC,KAAK,KAAM,gBACXA,KAAK,YACJ,aAAeJ,EAAOK,KAAO,IAAML,EAAOM,IAAM,KAQ/C,SAASC,EAAYC,GAC1BA,EAAEL,OAAO,KACNC,KAAK,QAAS,eAEjBI,EAAEL,OAAO,KACNC,KAAK,QAAS,eAOZ,SAASK,EAAmBD,GACjCA,EAAEL,OAAO,QACNO,KAAK,YACLN,KAAK,QAAS,oBACdA,KAAK,YAAa,eAClBA,KAAK,OAAQ,WACbA,KAAK,YAAa,IAErBI,EAAEL,OAAO,QACNO,KAAK,qCACLN,KAAK,QAAS,oBACdA,KAAK,OAAQ,WACbA,KAAK,YAAa,IAErBI,EAAEL,OAAO,QACNO,KAAK,6CACLN,KAAK,QAAS,cACdA,KAAK,OAAQ,WAUX,SAASO,EAAkBC,EAAQC,GACxC,OAAOZ,GAAGa,eAAeC,MAAMH,GAAQI,OAAOH,GASzC,SAASI,EAAeC,EAAOC,GACpClB,GAAGC,OAAO,wBAAwBA,OAAO,OACtCE,KAAK,QAASc,EAAQ,KACtBd,KAAK,SAAUe,GASb,SAASC,EAAgBF,EAAOC,GACrClB,GAAGC,OAAO,qBACPE,KAAK,KAAM,IACXA,KAAK,IAAKe,EAAS,GAEtBlB,GAAGC,OAAO,qBACPE,KAAK,IAAKc,EAAQ,GAClBd,KAAK,IAAKe,EAAS,IAEtBlB,GAAGC,OAAO,eACPE,KAAK,IAAKc,EAAQ,GAClBd,KAAK,KAAM,IAST,SAASiB,EAAWC,EAAQH,GACjClB,GAAGC,OAAO,gBACPE,KAAK,YAAa,gBAAkBe,EAAS,KAC7CI,KAAKtB,GAAGuB,WAAWF,IAQjB,SAASG,EAAWC,GACzBzB,GAAGC,OAAO,gBAAgBqB,KAAKtB,GAAG0B,SAASD,GAAQE,MAAM,IAC3D,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,WAAA,EAAA,QAAA,kBAAA,EAAA,QAAA,iBAAA,EAAA,QAAA,UAAA,EAAA,QAAA,UAAA,EAAA,QAAA,UAAA,EAAA,QAAA,eAAA,EAAA,QAAA,cAAA;;AC9EA,aA/BA,SAASC,EAAkBC,GACxB,OAAOA,EAAKC,IAAI,SAAAC,GACd,MAAO,CACN,KAAQA,EAAc,QACtB,MAASA,EAAY,MACrB,KAAQA,EAAiB,cAY/B,SAASC,EAAWH,GAClB,OAAOA,EAAKI,OAAO,SAAAF,GAAI,OAAIA,EAAY,MAAI,GAAKA,EAAW,KAAI,IAAMA,EAAW,KAAI,MAS/E,SAASG,EAAWL,GAGzB,OADmBG,EADEJ,EAAiBC,IAGxC,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA;;ACiCA,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,WAAA,MAAA,EAAA,cAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA/DQ,SAASM,EAAcC,EAAOP,EAAMZ,GAE1C,IAAIoB,EAAOR,EAAKC,IAAI,SAAAC,GAAU,OAAOA,EAAW,OAChDK,EAAMrB,OAAO,CAACuB,KAAKC,IAALD,MAAAA,KAAYD,EAAAA,IAAOC,KAAKE,IAALF,MAAAA,KAAYD,EAAAA,MAAQvB,MAAM,CAAC,EAAGG,IAY1D,SAASwB,EAAcL,EAAOP,EAAMX,GAEzC,IAAImB,EAAOR,EAAKC,IAAI,SAAAC,GAAU,OAAOA,EAAY,QACjDK,EAAMrB,OAAO,CAACuB,KAAKC,IAALD,MAAAA,KAAYD,EAAAA,IAAOC,KAAKE,IAALF,MAAAA,KAAYD,EAAAA,MAAQvB,MAAM,CAACI,EAAQ,IAW9D,SAASwB,EAAaC,EAAGC,EAAGf,GAGlC7B,GAAG6C,UAAU,gBAAgBC,SAEd9C,GAAGC,OAAO,iBACV4C,UAAU,gBACVhB,KAAKA,GACLkB,QACA7C,OAAO,UAEfC,KAAK,KAAM,SAAC4B,GAAI,OAAKa,EAAEb,EAAW,QAClC5B,KAAK,KAAM,SAAC4B,GAAI,OAAKY,EAAEZ,EAAY,SACnC5B,KAAK,IAAK,GACVA,KAAK,QAAS,eACdA,KAAK,SAAU,SACfA,KAAK,OAAQ,SAAC4B,GAAI,OAAKiB,EAAMjB,EAAW,QAIjD,SAASiB,EAAMC,GACb,OAAOA,GACL,IAAK,YACH,MAAO,UACT,IAAK,QACH,MAAO,UACT,IAAK,iBACH,MAAO,UACT,IAAK,QACH,MAAO,UACP,QACE,MAAO,WAGf,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA,EAAA,QAAA,aAAA,EAAA,QAAA,aAAA;;ACOA,aAvEO,SAASC,EAAY3C,EAAGU,GAQ7BjB,GAAG6C,UAAU,eAAeC,SAE5BvC,EAAEL,OAAO,QACRO,KAAK,WACLN,KAAK,cAAe,QACpBA,KAAK,QAAS,cACdA,KAAK,YAAa,cAAgBc,EARpB,IAQoCkC,WAAc,MAT7C,IASgEA,WAAa,KAEjG5C,EAAEL,OAAO,QACRO,KAAK,eACLN,KAAK,cAAe,QACpBA,KAAK,QAAS,cACdA,KAAK,YAAa,cAAgBc,EAdpB,GAcqC,IAAIkC,WAAc,IAAM,IAAwBA,WAAa,KAEjH5C,EAAEL,OAAO,QACRO,KAAK,SACLN,KAAK,cAAe,QACpBA,KAAK,QAAS,cACdA,KAAK,YAAa,cAAgBc,EApBpB,GAoBqC,IAAIkC,WAAc,IAAM,IAAwBA,WAAa,KAEjH5C,EAAEL,OAAO,QACRO,KAAK,kBACLN,KAAK,cAAe,QACpBA,KAAK,QAAS,cACdA,KAAK,YAAa,cAAgBc,EA1BpB,GA0BqC,IAAIkC,WAAc,IAAM,IAAyBA,WAAa,KAElH5C,EAAEL,OAAO,QACRO,KAAK,UACLN,KAAK,cAAe,QACpBA,KAAK,QAAS,cACdA,KAAK,YAAa,cAAgBc,EAhCpB,GAgCqC,IAAIkC,WAAc,IAAM,IAAyBA,WAAa,KAGlH5C,EAAEL,OAAO,QACRC,KAAK,QAAS,MACdA,KAAK,SAAU,MACfA,KAAK,OAAQ,WACbA,KAAK,QAAS,cACdA,KAAK,YAAa,cAAgBc,EAxCpB,IAwCoCkC,WAAc,IAAM,GAAwBA,WAAa,KAE5G5C,EAAEL,OAAO,QACRC,KAAK,QAAS,MACdA,KAAK,SAAU,MACfA,KAAK,OAAQ,WACbA,KAAK,QAAS,cACdA,KAAK,YAAa,cAAgBc,EA/CpB,IA+CoCkC,WAAc,IAAM,IAAwBA,WAAa,KAG5G5C,EAAEL,OAAO,QACRC,KAAK,QAAS,MACdA,KAAK,SAAU,MACfA,KAAK,OAAQ,WACbA,KAAK,QAAS,cACdA,KAAK,YAAa,cAAgBc,EAvDpB,IAuDoCkC,WAAc,IAAM,IAAwBA,WAAa,KAE5G5C,EAAEL,OAAO,QACRC,KAAK,QAAS,MACdA,KAAK,SAAU,MACfA,KAAK,OAAQ,WACbA,KAAK,QAAS,cACdA,KAAK,YAAa,cAAgBc,EA9DpB,IA8DoCkC,WAAc,IAAM,IAAyBA,WAAa,KAG/G,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,WAAA;;ACfM,aA9DN,IAAA,EAAA,EAAA,QAAA,kCACA,EAAA,EAAA,QAAA,sCACA,EAAA,EAAA,QAAA,+BACA,EAAA,EAAA,QAAA,qCAA0D,SAAA,EAAA,GAAA,GAAA,mBAAA,QAAA,OAAA,KAAA,IAAA,EAAA,IAAA,QAAA,EAAA,IAAA,QAAA,OAAA,EAAA,SAAA,GAAA,OAAA,EAAA,EAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,GAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,MAAA,CAAA,QAAA,GAAA,IAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,IAAA,IAAA,KAAA,EAAA,GAAA,YAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GAQ1D,SAAWnD,GACT,IACIoD,EAASC,EAAWC,EADlBvD,EAAS,CAAEM,IAAK,GAAIkD,MAAO,EAAGC,OAAQ,GAAIpD,KAAM,IAGhDiB,EAASrB,EAAGyD,cACZhC,EAASzB,EAAGyD,cAEZlD,EAAImD,EAAO5D,UAAUC,GAC3B2D,EAAOpD,WAAWC,GAClBmD,EAAOlD,kBAAkBD,GAIzBP,EAAG2D,IAAI,4BAA6B3D,EAAG4D,UAAUC,KAAK,SAAUhC,GAC9D,IAAMiC,EAAiBC,EAAQ7B,UAAUL,GAIzC,SAASmC,IACPV,EAAStD,EAAGC,OAAO,oBAAoBgE,OAAOC,wBAE9Cd,EAAU,CACRnC,MAAOqC,EAAOrC,MACdC,OAAQ,KAGVmC,EAAY,CACVpC,MAAOmC,EAAQnC,MAAQlB,EAAOwD,MAAQxD,EAAOK,KAC7Cc,OAAQkC,EAAQlC,OAASnB,EAAOyD,OAASzD,EAAOM,KAElDqD,EAAO1C,cAAcoC,EAAQnC,MAAOmC,EAAQlC,QAE9C,SAASiD,IACPT,EAAOvC,eAAekC,EAAUpC,MAAOoC,EAAUnC,QAEjDkD,EAAIjC,aAAad,EAAQyC,EAAgBT,EAAUpC,OACnDmD,EAAI3B,aAAahB,EAAQqC,EAAgBT,EAAUnC,QAEnDwC,EAAOtC,UAAUC,EAAQgC,EAAUnC,QACnCwC,EAAOlC,UAAUC,GAEjB2C,EAAI1B,YAAYjB,EAAQJ,EAAQyC,GAChCO,EAAOnB,WAAW3C,EAAG8C,EAAUpC,OA3BjC+C,IACAG,IA6BAG,OAAOC,iBAAiB,SAAU,WAChCP,IACAG,QA/CN,CAmDGnE","file":"indexPrixGrandeur.9aabca43.js","sourceRoot":"../src","sourcesContent":["\n/**\n * Generates the SVG element g which will contain the data visualisation.\n *\n * @param {object} margin The desired margins around the graph\n * @returns {*} The d3 Selection for the created g element\n */\n export function generateG (margin) {\n  return d3.select('.graph-prix-area')\n    .select('svg')\n    .append('g')\n    .attr('id', 'graph-g-area')\n    .attr('transform',\n      'translate(' + margin.left + ',' + margin.top + ')')\n}\n\n/**\n * Appends an SVG g element which will contain the y axis.\n *\n * @param {*} g The d3 Selection of the graph's g SVG element\n */\nexport function appendAxes (g) {\n  g.append('g')\n    .attr('class', 'x axis-area')\n\n  g.append('g')\n    .attr('class', 'y axis-area')\n}\n/**\n * Appends the labels for the the y axis and the title of the graph.\n *\n * @param {*} g The d3 Selection of the graph's g SVG element\n */\nexport function appendGraphLabels (g) {\n  g.append('text')\n    .text('Prix ($)')\n    .attr('class', 'y axis-text area')\n    .attr('transform', 'rotate(-90)')\n    .attr('fill', '#898989')\n    .attr('font-size', 12)\n\n  g.append('text')\n    .text(\"Taille du logement (pieds carr√©s)\")\n    .attr('class', 'x axis-text area')\n    .attr('fill', '#898989')\n    .attr('font-size', 12)\n\n  g.append('text')\n    .text('Prix en fonction de la taille du logement')\n    .attr('class', 'title area')\n    .attr('fill', '#898989')\n}\n\n/**\n * Defines the color scale used in the graph.\n *\n * @param {string[]} colors A sorted array of color hex strings to be used\n * @param {string[]} players A sorted array of player names to use as the domain\n * @returns {*} The color scale to be used inthe graph\n */\nexport function defineColorScale (colors, players) {\n  return d3.scaleOrdinal().range(colors).domain(players)\n}\n\n/**\n * Sets the size of the SVG canvas containing the graph.\n *\n * @param {number} width The desired width\n * @param {number} height The desired height\n */\nexport function setCanvasSize (width, height) {\n  d3.select('#bar-chart-prix-area').select('svg')\n    .attr('width', width + 210)\n    .attr('height', height)\n}\n\n/**\n * Positions the x axis label, y axis label and title label on the graph.\n *\n * @param {number} width The width of the graph\n * @param {number} height The height of the graph\n */\nexport function positionLabels (width, height) {\n  d3.select('.y.axis-text.area')\n    .attr('x', -70)\n    .attr('y', height / 2)\n\n  d3.select('.x.axis-text.area')\n    .attr('x', width / 2)\n    .attr('y', height + 40)\n\n  d3.select('.title.area')\n    .attr('x', width / 2)\n    .attr('y', -35)\n}\n\n/**\n * Draws the x axis at the bottom of the plot.\n *\n * @param {*} xScale The scale to use for the x axis\n * @param {number} height The height of the graph\n */\nexport function drawXAxis (xScale, height) {\n  d3.select('.x.axis-area')\n    .attr('transform', 'translate(0, ' + height + ')')\n    .call(d3.axisBottom(xScale))\n}\n\n/**\n * Draws the y axis at the left of the plot.\n *\n * @param {*} yScale The scale to use for the y axis\n */\nexport function drawYAxis (yScale) {\n  d3.select('.y.axis-area').call(d3.axisLeft(yScale).ticks(5))\n}\n","/**\n * Extracts the price and the area of the mainstream data\n *\n * @param {object[]} data the data to be used\n * @returns {object[]} The extracted data\n */\nfunction extractPriceArea (data) {\n   return data.map(elem => {\n     return {\n      \"type\": elem[\"unitype\"],\n      \"price\": elem[\"price\"],\n      \"area\": elem[\"areainfeet\"]\n     }\n   })\n}\n\n\n/**\n * Cleans the data\n *\n * @param {object[]} data the data to be used\n * @returns {object[]} The cleaned data\n */\nfunction cleanData (data) {\n  return data.filter(elem => elem[\"price\"] > 0 && elem[\"area\"] > 10 && elem[\"area\"] < 4000);\n}\n\n/**\n * Defines the color scale used in the graph.\n *\n * @param {object[]} data the data to be used\n * @returns {object[]} The processed data\n */\nexport function endResult (data) {\n  let extracted_data = extractPriceArea(data)\n  let cleaned_data = cleanData(extracted_data)\n  return cleaned_data\n}\n\n\n","/**\n * Sets the domain and range of the X scale.\n *\n * @param {*} scale The x scale\n * @param {object[]} data The data to be used\n * @param {number} width The width of the graph\n */\n export function updateXScale (scale, data, width) {\n  // TODO : Set the domain and range of the groups' x scale\n  let temp = data.map(elem => { return elem[\"area\"] })\n  scale.domain([Math.min(...temp), Math.max(...temp)]).range([0, width])\n}\n\n\n\n/**\n * Sets the domain and range of the Y scale.\n *\n * @param {*} scale The Y scale\n * @param {object[]} data The data to be used\n * @param {number} height The height of the graph\n */\nexport function updateYScale (scale, data, height) {\n  // TODO : Set the domain and range of the graph's y scale\n  let temp = data.map(elem => { return elem[\"price\"] })\n  scale.domain([Math.min(...temp), Math.max(...temp)]).range([height, 0]);\n}\n\n/**\n * Draws the circles\n *\n * @param {*} y The graph's y scale\n * @param {*} x The graph's x scale\n * @param {*} data The data to be used\n * @param {*} tip The tooltip to show when each bar is hovered and hide when it's not\n */\n export function drawCircles (y, x, data) {\n  // TODO : Draw the bars\n\n  d3.selectAll(\".areaCircles\").remove()\n\n  const circle = d3.select('#graph-g-area')\n                .selectAll('.area-circle')\n                .data(data)\n                .enter()\n                .append('circle')\n\n  circle.attr('cx', (elem) => x(elem[\"area\"]))\n        .attr('cy', (elem) => y(elem[\"price\"]))\n        .attr('r', 5)\n        .attr('class', \"areaCircles\")\n        .attr('stroke', 'black')\n        .attr('fill', (elem) => color(elem[\"type\"]))\n\n}\n\nfunction color(type){\n  switch(type){\n    case \"apartment\":\n      return \"#ffb997\"\n    case \"condo\":\n      return \"#f67e7d\"\n    case \"duplex-triplex\":\n      return \"#040926\"\n    case \"house\":\n      return \"#3CAEA3\"\n      default:\n        return \"#69a3b2\"\n  }\n\n}\n","/**\n * Draws the legend.\n *\n * @param {*} g The d3 Selection of the graph's g SVG element\n * @param {number} width The width of the graph, used to place the legend\n */\nexport function drawLegend (g, width) {\n  // TODO : Draw the legend using d3Legend\n  // For help, see : https://d3-legend.susielu.com/\n  var data = [\"Apartement\", \"Condo\", \"duplex-triplex\"]\n  const TOP_LEGEND_TITLE = -30\n  const TOP_LEGEND = -10\n  const MARGIN = 10\n\n  d3.selectAll(\".areaLegend\").remove()\n\n  g.append('text')\n  .text('L√©gende')\n  .attr('font-weight', \"bold\")\n  .attr(\"class\", \"areaLegend\")\n  .attr(\"transform\", \"translate(\" + (width + MARGIN).toString()  + \",\" + (TOP_LEGEND).toString() + \")\");\n  \n  g.append('text')\n  .text(\"Appartement\")\n  .attr('font-weight', \"bold\")\n  .attr(\"class\", \"areaLegend\")\n  .attr(\"transform\", \"translate(\" + (width + MARGIN + 20).toString()  + \",\" + (TOP_LEGEND_TITLE + 50).toString() + \")\");\n\n  g.append('text')\n  .text(\"Condo\")\n  .attr('font-weight', \"bold\")\n  .attr(\"class\", \"areaLegend\")\n  .attr(\"transform\", \"translate(\" + (width + MARGIN + 20).toString()  + \",\" + (TOP_LEGEND_TITLE + 75).toString() + \")\");\n\n  g.append('text')\n  .text(\"duplex-triplex\")\n  .attr('font-weight', \"bold\")\n  .attr(\"class\", \"areaLegend\")\n  .attr(\"transform\", \"translate(\" + (width + MARGIN + 20).toString()  + \",\" + (TOP_LEGEND_TITLE + 100).toString() + \")\");\n\n  g.append('text')\n  .text(\"Maison\")\n  .attr('font-weight', \"bold\")\n  .attr(\"class\", \"areaLegend\")\n  .attr(\"transform\", \"translate(\" + (width + MARGIN + 20).toString()  + \",\" + (TOP_LEGEND_TITLE + 125).toString() + \")\");\n\n\n  g.append('rect')\n  .attr(\"width\", \"15\")\n  .attr(\"height\", \"15\")\n  .attr(\"fill\", \"#ffb997\")\n  .attr(\"class\", \"areaLegend\")\n  .attr(\"transform\", \"translate(\" + (width + MARGIN).toString()  + \",\" + (TOP_LEGEND_TITLE + 38).toString() + \")\");\n\n  g.append('rect')\n  .attr(\"width\", \"15\")\n  .attr(\"height\", \"15\")\n  .attr(\"fill\", \"#f67e7d\")\n  .attr(\"class\", \"areaLegend\")\n  .attr(\"transform\", \"translate(\" + (width + MARGIN).toString()  + \",\" + (TOP_LEGEND_TITLE + 63).toString() + \")\");\n\n\n  g.append('rect')\n  .attr(\"width\", \"15\")\n  .attr(\"height\", \"15\")\n  .attr(\"fill\", \"#040926\")\n  .attr(\"class\", \"areaLegend\")\n  .attr(\"transform\", \"translate(\" + (width + MARGIN).toString()  + \",\" + (TOP_LEGEND_TITLE + 88).toString() + \")\");\n\n  g.append('rect')\n  .attr(\"width\", \"15\")\n  .attr(\"height\", \"15\")\n  .attr(\"fill\", \"#3CAEA3\")\n  .attr(\"class\", \"areaLegend\")\n  .attr(\"transform\", \"translate(\" + (width + MARGIN).toString()  + \",\" + (TOP_LEGEND_TITLE + 113).toString() + \")\");\n\n\n}\n","import * as helper from './scripts/explCoutArea/helper'\nimport * as preproc from \"./scripts/explCoutArea/preprocess\"\nimport * as viz from './scripts/explCoutArea/viz'\nimport * as legend from './scripts/explCoutArea/legend.js'\n\n/**\n * @file This file is the entry-point for the the code for TP3 for the course INF8808.\n * @author Olivia G√©linas\n * @version v1.0.0\n */\n\n(function (d3) {\n  const margin = { top: 50, right: 0, bottom: 50, left: 75 }\n  let svgSize, graphSize, bounds;\n\n  const xScale = d3.scaleLinear()\n  const yScale = d3.scaleLinear()\n\n  const g = helper.generateG(margin)\n  helper.appendAxes(g)\n  helper.appendGraphLabels(g)\n\n\n\n  d3.csv(\"./donnees_habitations.csv\", d3.autoType).then(function (data) {\n    const extracted_data = preproc.endResult(data)\n    setSizing();\n    build();\n\n    function setSizing() {\n      bounds = d3.select('.graph-prix-area').node().getBoundingClientRect()\n\n      svgSize = {\n        width: bounds.width,\n        height: 700\n      }\n\n      graphSize = {\n        width: svgSize.width - margin.right - margin.left,\n        height: svgSize.height - margin.bottom - margin.top,\n      };\n      helper.setCanvasSize(svgSize.width, svgSize.height)\n    }\n    function build() {\n      helper.positionLabels(graphSize.width, graphSize.height);\n      \n      viz.updateXScale(xScale, extracted_data, graphSize.width);\n      viz.updateYScale(yScale, extracted_data, graphSize.height);\n\n      helper.drawXAxis(xScale, graphSize.height);\n      helper.drawYAxis(yScale);\n      \n      viz.drawCircles(yScale, xScale, extracted_data)\n      legend.drawLegend(g, graphSize.width)\n    }\n\n    window.addEventListener(\"resize\", () => {\n      setSizing();\n      build();\n    });\n\n  });\n})(d3);\n"]}